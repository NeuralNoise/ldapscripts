#  Copyright (C) 2005 Ganaël LAPLANCHE - Linagora
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
#  USA.

##### Beginning of ldapscripts configuration #####

# LDAP Configuration
SERVER="localhost"
BINDDN="cn=Manager,dc=example,dc=com"
BINDPWD="secret"

SUFFIX="dc=example,dc=com" # Global suffix
GSUFFIX="ou=Groups" # Groups ou (just under $SUFFIX)
USUFFIX="ou=Users" # Users ou (just under $SUFFIX)
MSUFFIX="ou=Machines" # Machines ou (just under $SUFFIX)

# Start with these IDs *if no entry found in LDAP*
GIDSTART="10000" # Group ID
UIDSTART="10000" # User ID
MIDSTART="20000" # Machine ID

# User properties
USHELL="/bin/sh"
UHOMES="/home/%u" # You may use %u for username here
CREATEHOMES="no" # Create home directories and set rights ?

# User passwords generation
# Command-line used to generate a (random ?) password for the users (you may use %u for username here)
PASSWORDGEN="head -c8 /dev/random | uuencode -m - | sed -n -e '2s|=*$||;2p' | sed -e 's|+||g' -e 's|/||g'"
#PASSWORDGEN="echo changeme"
#PASSWORDGEN="echo %u"

# User passwords recording
# you can keep trace of generated passwords setting PASSWORDFILE and RECORDPASSWORDS 
# (useful when performing a massive creation / net rpc vampire)
# WARNING !!!! DO NOT FORGET TO DELETE THE GENERATED FILE WHEN DONE !
# WARNING !!!! DO NOT FORGET TO TURN OFF RECORDING WHEN DONE !
RECORDPASSWORDS="no"
PASSWORDFILE="/var/log/ldapscripts_passwd.log"

# Where to log
LOGFILE="/var/log/ldapscripts.log"

# Various binaries used within scripts
LDAPSEARCHBIN=`which ldapsearch`
LDAPADDBIN=`which ldapadd`
LDAPDELETEBIN=`which ldapdelete`
LDAPMODIFYBIN=`which ldapmodify`
SLAPPASSWDBIN=`which slappasswd`
# Warning : these scripts also use : uuencode, date, grep, sed, cut, expr, which... 
# Please check they are installed before using these scripts
# Note that many of them should come with your OS

##### End of configuration #####

# Check if ldap client tools are installed
if [ "$LDAPADDBIN" == "" ] || [ "$LDAPDELETEBIN" == "" ] || [ "$LDAPSEARCHBIN" == "" ] || [ "$LDAPMODIFYBIN" == "" ] || [ "$SLAPPASSWDBIN" == "" ]
then
  echo "You must have OpenLDAP client commands installed before running these scripts"
  echo "Check that ldapadd, ldapdelete, ldapsearch, ldapmodify and slappasswd are available"
  exit -1
fi

# Check homes
if [ "$UHOMES" == "" ]
then
  UHOMES="/dev/null"
fi

# Check shell
if [ "$USHELL" == "" ]
then
  USHELL="/bin/false"
fi

# Check password file if password recording set
if [ "$RECORDPASSWORDS" == "yes" ] || [ "$RECORDPASSWORDS" == "Yes" ] || [ "$RECORDPASSWORDS" == "YES" ]
then
  if [ "$PASSWORDFILE" == "" ]
  then
    PASSWORDFILE="/var/log/ldapscripts_passwd.log"
  fi

  if [ ! -f "$PASSWORDFILE" ]
  then
    touch "$PASSWORDFILE" 2>/dev/null
    if [ $? -ne 0 ]
    then
      echo "Unable to create password log file $PASSWORDFILE, exiting..."
      exit -1
    fi
  fi
fi

# Check logfile
if [ "$LOGFILE" == "" ]
then
  LOGFILE="/var/log/ldapscripts.log"
fi

if [ ! -f "$LOGFILE" ]
then
  touch "$LOGFILE" 2>/dev/null
  if [ $? -ne 0 ]
  then
    echo "Unable to create log file $LOGFILE, exiting..."
    exit -1
  fi
fi

# Record command call into logfile
_NOW=`date "+%D - %r"`
echo ">> $_NOW : Command : $0" >> "$LOGFILE"

